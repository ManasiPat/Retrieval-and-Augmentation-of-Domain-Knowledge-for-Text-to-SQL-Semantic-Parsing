{"0": {"question": "List the card with value that cost more converted mana for the face.", "GT_SQL": "SELECT id FROM cards ORDER BY faceConvertedManaCost LIMIT 1", "actual_evidence": ["more converted mana for the face refers to Max(faceConvertedManaCost)"], "generic_evidence": ["'value that cost more converted mana for the face' refers to ORDER BY cards.faceConvertedManaCost LIMIT 1"]}, "1": {"question": "Name all cards with 2015 frame style ranking below 100 on EDHRec.", "GT_SQL": "SELECT id FROM cards WHERE edhrecRank < 100 AND frameVersion = 2015", "actual_evidence": ["below 100 on EDHRec refers to EDHRec <100", " with 2015 frame style refers to frameVersion = 2015"], "generic_evidence": ["'frame style ranking below 100 on EDHRec' refers to cards.edhrecRank < 100", "'cards with 2015 frame style' refers to cards.frameVersion = 2015"]}, "2": {"question": "Find all cards illustrated by Stephen Daniel and describe the text of the ruling of these cards. State if these cards have missing or degraded properties and values.", "GT_SQL": "SELECT T1.id, T2.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniele'", "actual_evidence": ["cards have missing or degraded properties and value refers to hasContentWarning = 1", " 'Stephen Daniele' is artist"], "generic_evidence": ["'cards have missing or degraded properties and values' refers to cards.hasContentWarning = 1", "'illustrated by Stephen Daniel' refers to cards.artist = 'Stephen Daniel'"]}, "3": {"question": "Describe the information about rulings for card named 'Sublime Epiphany' with number 74s.", "GT_SQL": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Sublime Epiphany' AND T1.number = '74'", "actual_evidence": ["Sublime Epiphany' is name of cards", " number 74s refers to number = '74s'", " information refers to text"], "generic_evidence": ["'card named 'Sublime Epiphany' with number 74s' refers to cards.name = 'Sublime Epiphany' AND cards.number = '74'", "'number 74s' refers to cards.number = '74s'", "'information about rulings' refers to rulings.text"]}, "4": {"question": "Name the card and artist with the most ruling information. Also state if the card is a promotional printing.", "GT_SQL": "SELECT T1.name, T1.artist, T1.isPromo FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.isPromo = 1 GROUP BY T1.artist ORDER BY COUNT(DISTINCT T1.uuid) DESC LIMIT 1", "actual_evidence": ["with the most ruling information refers to Max(count(rulings.uuid))", " the card is the promotional printing refers to isPromo = 1"], "generic_evidence": ["'artist with the most ruling information' refers to ORDER BY COUNT(DISTINCT cards.uuid) DESC LIMIT 1", "'the card is a promotional printing' refers to cards.isPromo = 1"]}, "5": {"question": "Name all the cards which have alternative language in Japanese.", "GT_SQL": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Japanese'", "actual_evidence": ["Japanese' is the language"], "generic_evidence": ["'alternative language in Japanese' refers to foreign_data.language = 'Japanese'"]}, "6": {"question": "Calculate the percentage of the cards availabe in Chinese Simplified.", "GT_SQL": "SELECT CAST(SUM(CASE WHEN T2.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid", "actual_evidence": ["Chinese Simplified' is the language", " percentage = Divide(Sum(id where language = 'Chinese Simplified'), Count(id)) *100"], "generic_evidence": ["'cards availabe in Chinese Simplified' refers to foreign_data.language = 'Chinese Simplified'", "'percentage of the cards availabe in Chinese Simplified' refers to CAST(SUM(CASE WHEN foreign_data.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(cards.id)"]}, "7": {"question": "What is the keyword found on card 'Angel of Mercy'?", "GT_SQL": "SELECT DISTINCT keywords FROM cards WHERE name = 'Angel of Mercy'", "actual_evidence": ["Angel of Mercy' is the name of card"], "generic_evidence": ["'keyword found on card 'Angel of Mercy'' refers to cards.keywords WHERE cards.name = 'Angel of Mercy'"]}, "8": {"question": "What type of promotion is of card 'Duress'?", "GT_SQL": "SELECT promoTypes FROM cards WHERE name = 'Duress' AND promoTypes IS NOT NULL", "actual_evidence": ["card Duress refers to name = 'Duress'", " type of promotion refers to promoTypes"], "generic_evidence": ["'type of promotion' refers to promoTypes", "'type of promotion' refers to cards.promoTypes"]}, "9": {"question": "What is the border color of card \"Ancestor's Chosen\"?", "GT_SQL": "SELECT DISTINCT borderColor FROM cards WHERE name = 'Ancestor''s Chosen'", "actual_evidence": ["Ancestor's Chosen' is the name of card"], "generic_evidence": ["'border color of card \"Ancestor's Chosen\"' refers to cards.borderColor WHERE cards.name = \"Ancestor's Chosen\""]}, "10": {"question": "cards are not directly linked to language but through table 'set'. you need to add set in covered table & rephrase your question\nWhat are the languages available for the set that card 'Angel of Mercy' is in?", "GT_SQL": "SELECT language FROM set_translations WHERE id IN ( SELECT id FROM cards WHERE name = 'Angel of Mercy' )", "actual_evidence": ["Angel of Mercy' is the name of card"], "generic_evidence": ["'the set that card 'Angel of Mercy' is in' refers to set_translations.name = 'Angel of Mercy'"]}, "11": {"question": "How many cards of legalities whose status is restricted have text boxes?", "GT_SQL": "SELECT COUNT(DISTINCT T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Restricted' AND T1.isTextless = 0", "actual_evidence": ["restricted refers to status = 'restricted'", " have text boxes refers to is Textless = 0"], "generic_evidence": ["'legalities whose status is restricted' refers to legalities.status = 'Restricted'", "'cards of legalities whose status is restricted have text boxes' refers to legalities.status = 'Restricted' AND cards.isTextless = 0"]}, "12": {"question": "What is the status of card \"Cloudchaser Eagle\"?", "GT_SQL": "SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle'", "actual_evidence": ["Cloudchaser Eagle is the name of card"], "generic_evidence": ["'of card \"Cloudchaser Eagle\"' refers to cards.name = 'Cloudchaser Eagle'"]}, "13": {"question": "What is the type of card \"Benalish Knight\"?", "GT_SQL": "SELECT DISTINCT T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Benalish Knight'", "actual_evidence": ["Benalish Knight' is the name of card"], "generic_evidence": ["'the type of card \"Benalish Knight\"' refers to cards.type"]}, "14": {"question": "What is the rule of playing card \"Benalish Knight\"?", "GT_SQL": "SELECT T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Benalish Knight'", "actual_evidence": ["Benalish Knight' is the name of card", " rule of playing card refers to format"], "generic_evidence": ["'playing card \"Benalish Knight\"' refers to cards.name = 'Benalish Knight'", "'rule of playing card' refers to legalities.format"]}, "15": {"question": "Please provide the names of the artists who illustrated the card art in Phyrexian.", "GT_SQL": "SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Phyrexian'", "actual_evidence": ["Phyrexian' is the language", " name of artists refers to artist"], "generic_evidence": ["'illustrated the card art in Phyrexian' refers to foreign_data.language = 'Phyrexian'", "'names of the artists who illustrated the card art in Phyrexian' refers to cards.artist"]}, "16": {"question": "How many cards that illusrtated in German have been reprinted?", "GT_SQL": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.isReprint = 1", "actual_evidence": ["German' is the language", " reprinted refers to isReprint = 1"], "generic_evidence": ["'illustrated in German' refers to foreign_data.language = 'German'", "'reprinted' refers to cards.isReprint = 1"]}, "17": {"question": "How many borderless cards are illustrated in Russian?", "GT_SQL": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'borderless' AND T2.language = 'Russian'", "actual_evidence": ["borderless card refers to borderColor = 'borderless'", " 'Russian' is the language"], "generic_evidence": ["'borderless cards' refers to cards.borderColor = 'borderless'", "'illustrated in Russian' refers to foreign_data.language = 'Russian'"]}, "18": {"question": "How many cards are there with toughness of 99?", "GT_SQL": "SELECT COUNT(id) FROM cards WHERE toughness = 99", "actual_evidence": ["How many cards refers to count(id)"], "generic_evidence": ["'cards with toughness of (100)' refers to cards.toughness = 100"]}, "19": {"question": "How many black border cards are only available on mtgo?", "GT_SQL": "SELECT COUNT(id) FROM cards WHERE availability = 'mtgo' AND borderColor = 'black'", "actual_evidence": ["black border card refers to borderColor = black", " available on mtgo refers to availability = mtgo", "\n\nadd quotes for string = 'black' and = 'mtgo'"], "generic_evidence": ["'black border cards' refers to cards.borderColor = 'black'", "'available on mtgo' refers to cards.availability = 'mtgo'", "'only available on mtgo' refers to cards.availability = 'mtgo'"]}, "20": {"question": "List down all the card IDs with converted mana cost of 0.", "GT_SQL": "SELECT id FROM cards WHERE convertedManaCost = 0", "actual_evidence": ["converted mana cost of 0 refers to covertedManaCost = 0"], "generic_evidence": ["'converted mana cost of (100)' refers to cards.convertedManaCost = 100"]}, "21": {"question": "How many cards with original type of \"Summon - Angel\" have subtype other than \"Angel\"?", "GT_SQL": "SELECT COUNT(id) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel'", "actual_evidence": ["subtype other than Angel refers to subtypes is not 'Angel'"], "generic_evidence": ["'have subtype other than \"Angel\"' refers to cards.subtypes != 'Angel'"]}, "22": {"question": "What are the cards that only available in paper and Japanese language?", "GT_SQL": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T2.language = 'Japanese'", "actual_evidence": ["available in paper refers to availability = 'paper'", " 'Japanese is the language"], "generic_evidence": ["'cards that only available in paper' refers to cards.availability = 'paper'", "'only available in paper and Japanese language' refers to cards.availability = 'paper' AND foreign_data.language = 'Japanese'"]}, "23": {"question": "What are the cards in set 10E with converted mana of 5 have translation and what are the languages?", "GT_SQL": "SELECT language FROM set_translations WHERE id = ( SELECT id FROM cards WHERE convertedManaCost = 5 ) AND setCode = '10E'", "actual_evidence": ["set 10E refers to setCode = '10E'", " converted mana of 5 refers to convertedManaCost = 5"], "generic_evidence": ["'cards in set 10E' refers to set_translations.setCode = '10E'", "'cards in set 10E with converted mana of (100) have translation' refers to cards.convertedManaCost = 100 AND set_translations.setCode = '10E'"]}, "24": {"question": "List down the name of cards with original types of Creature - Elf and the date of rulings for these cards.", "GT_SQL": "SELECT T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf'", "actual_evidence": ["Creature - Elf is the originalType"], "generic_evidence": ["'name of cards with original types of Creature - Elf' refers to cards.originalType = 'Creature - Elf'"]}, "25": {"question": "What are the colors of cards from ID 1-20? What are the format of these cards?", "GT_SQL": "SELECT T1.colors, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.id BETWEEN 1 AND 20", "actual_evidence": ["ID 1-20 refers to id BETWEEN 1 and 20"], "generic_evidence": ["'cards from ID 1-20' refers to cards.id BETWEEN 1 AND 20"]}, "26": {"question": "Among the Artifact cards, which are black color and comes with foreign languague translation?", "GT_SQL": "SELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Artifact' AND T1.colors = 'B'", "actual_evidence": ["Artifact card refers to originalType = 'Artifact'", " black color refers to colors = 'B'", " foreign language refers to language in foreign_data"], "generic_evidence": ["'Among the Artifact cards' refers to cards.originalType = 'Artifact'", "'black color' refers to cards.colors = 'B'", "'comes with foreign language translation' refers to cards.uuid = foreign_data.uuid"]}, "27": {"question": "Pick 3 cards with rarity of uncommon, list down name these cards according to ascending order of it's ruling date.", "GT_SQL": "SELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'uncommon' ORDER BY T2.date ASC LIMIT 3", "actual_evidence": ["uncommon refers to rarity = 'uncommon'"], "generic_evidence": ["'cards with rarity of uncommon' refers to cards.rarity = 'uncommon'"]}, "28": {"question": "On how many cards designed by Volcan Ba\u00c7\u00b5a is its foil non-powerful?", "GT_SQL": "SELECT COUNT(id) FROM cards WHERE cardKingdomId IS NULL AND cardKingdomFoilId IS NULL AND artist = 'Volcan Ba\u00c7\u00b5a'", "actual_evidence": ["Volcan Ba\u00c7\u00b5a refer to artist", " foil non-poweful foils refers to cardKingdomId is NOT NULL and cardKingdomFoildId is NULL \n"], "generic_evidence": ["'cards designed by Volcan Ba\u00c7\u00b5a' refers to cards.artist = 'Volcan Ba\u00c7\u00b5a'", "'foil non-powerful' refers to cards.cardKingdomId IS NULL AND cards.cardKingdomFoilId IS NULL"]}, "29": {"question": "How many cards designed by UDON and available in mtgo print type has a starting maximum hand size of -1?", "GT_SQL": "SELECT COUNT(id) FROM cards WHERE hAND = '-1' AND artist = 'UDON' AND Availability = 'print' AND type = 'mtgo'", "actual_evidence": ["UDON refer to artist", " availabe in mtgo refers to availability = 'mtgo'", " starting maximum hand size of -1 refers to hand = -1"], "generic_evidence": ["'cards designed by UDON' refers to cards.artist = 'UDON'", "'available in mtgo print type' refers to cards.availability = 'mtgo'", "'cards designed by UDON and available in mtgo print type has a starting maximum hand size of -1' refers to cards.hand = -1 AND cards.artist = 'UDON' AND cards.Availability = 'print' AND cards.type = 'mtgo'"]}, "30": {"question": "How many cards with a 1993 frame version and available on paper have a sensitive content warning?", "GT_SQL": "SELECT COUNT(id) FROM cards WHERE frameVersion = 1993 AND availability = 'paper' AND hasContentWarning = 1", "actual_evidence": ["sensitive content warning refer to hasContentWarning = 1", " available on paper refer to availability = 'paper' ", "1993 refer to frameVersion"], "generic_evidence": ["'have a sensitive content warning' refers to cards.hasContentWarning = 1", "'available on paper' refers to cards.availability = 'paper'", "'1993 frame version' refers to cards.frameVersion = 1993"]}, "31": {"question": "How much unconverted mana do all the cards created by Rob Alexander cost in total?", "GT_SQL": "SELECT SUM(manaCost) FROM cards WHERE artist = 'Rob Alexander'", "actual_evidence": ["unconverted mana refer to manaCost", " Rob Alexander refer to artist"], "generic_evidence": ["'unconverted mana' refers to cards.manaCost", "'all the cards created by Rob Alexander' refers to cards.artist = 'Rob Alexander'"]}, "32": {"question": "Lists the set code of all cards translated into Spanish.", "GT_SQL": "SELECT setCode FROM set_translations WHERE language = 'Spanish'", "actual_evidence": ["Spanish refer to language", " set code refers to setCode"], "generic_evidence": ["'cards translated into Spanish' refers to set_translations.language = 'Spanish'", "'Lists the set code of all cards' refers to set_translations.setCode"]}, "33": {"question": "What percentage of legendary frame effect cards have a maximum starting maximun hand\nsize of +3?", "GT_SQL": "SELECT SUM(CASE WHEN hAND = '+3' THEN 1.0 ELSE 0 END) / COUNT(id) * 100 FROM cards WHERE frameEffects = 'legendary'", "actual_evidence": ["maximun hand size of +3 refer to hand = +3", " legendary frame effect cards refer to frameEffects = 'legendary'", " percentage refer to DIVIDE(COUNT(hand = '+3'), COUNT(id)) from cards where frameEffects = 'legendary'"], "generic_evidence": ["'maximum starting maximum hand size of +3' refers to cards.hand = '+3'", "'legendary frame effect cards' refers to cards.frameEffects = 'legendary'", "'percentage of legendary frame effect cards have a maximum starting maximum hand size of +3' refers to SUM(CASE WHEN cards.hand = '+3' THEN 1.0 ELSE 0 END) / COUNT(cards.id) * 100 WHERE cards.frameEffects = 'legendary'"]}, "34": {"question": "What is the percentage of Story Spotlight cards that also have a text box? List them by their ID.", "GT_SQL": "SELECT CAST(SUM(CASE WHEN isTextless = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM cards WHERE isStorySpotlight = 1", "actual_evidence": ["Story Spotlight cards that do not have a text box refers to isStorylight = 1 and isTextless = 1", " Percentage refer to DIVIDE(SUM(count(id) where isStorylight = 1), SUM(count(id))) * 100\n\n"], "generic_evidence": ["'Story Spotlight cards that also have a text box' refers to cards.isStorySpotlight = 1 and cards.isTextless = 0", "'percentage of Story Spotlight cards that also have a text box' refers to CAST(SUM(CASE WHEN isTextless = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id)"]}, "35": {"question": "Calculate the percentage of cards in Spanish. List them by name.", "GT_SQL": "SELECT ( SELECT CAST(SUM(CASE WHEN language = 'Spanish' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM foreign_data ) FROM foreign_data WHERE language = 'Spanish'", "actual_evidence": ["Spanish refer to language", " Percentage refer to DIVIDE(SUM(ID where language = 'Spanish'), COUNT(id))*100"], "generic_evidence": ["'cards in Spanish' refers to foreign_data.language = 'Spanish'", "'percentage of cards in Spanish' refers to (SUM(CASE WHEN language = 'Spanish' THEN 1 ELSE 0 END) * 100 / COUNT(*))"]}, "36": {"question": "How many Brazilian Portuguese translated sets are inside the Commander block?", "GT_SQL": "SELECT COUNT(T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Portuguese (Brazil)' AND T1.block = 'Commander'", "actual_evidence": ["Commander block refer to block = 'Commander'", " sets refer to setCode", " Portuguese refer to language = 'Portuguese (Brasil)'\n\n"], "generic_evidence": ["inside the Commander block' refers to sets.block = 'Commander'", "'sets are inside' refers to set_translations.setCode", "'Brazilian Portuguese translated sets' refers to set_translations.language = 'Portuguese (Brazil)'"]}, "37": {"question": "How many null power cards have the \"If you have two Lords of the Pit, you can sacrifice them to each other\" ruling text?", "GT_SQL": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power LIKE '%*%' AND T2.text = 'If you have two Lords of the Pit, you can sacrifice them to each other'", "actual_evidence": ["null power cards refers to power is NULL", " ruling text refers to text"], "generic_evidence": ["'null power cards' refers to cards.power IS NULL", "'If you have two Lords of the Pit, you can sacrifice them to each other' ruling text refers to rulings.text"]}, "38": {"question": "Indicates the number of cards with pre-modern format, ruling text \"This is a triggered mana ability\" that do not have multiple faces.", "GT_SQL": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN rulings AS T3 ON T1.uuid = T3.uuid WHERE T2.format = 'premodern' AND T3.text = 'This is a triggered mana ability.' AND T1.Side IS NULL", "actual_evidence": ["do not have multiple faces refers to side IS NULL"], "generic_evidence": ["'cards with pre-modern format, ruling text \"This is a triggered mana ability\" that do not have multiple faces' refers to cards.Side IS NULL"]}, "39": {"question": "To which artist does the card with the text \"Das perfekte Gegenmittel zu einer dichten Formation\" belong?", "GT_SQL": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.flavorText = 'DAS perfekte Gegenmittel zu einer dichten Formation.'", "actual_evidence": ["text refers to flavorText"], "generic_evidence": ["'the card with the text \"Das perfekte Gegenmittel zu einer dichten Formation\"' refers to foreign_data.flavorText = 'Das perfekte Gegenmittel zu einer dichten Formation'"]}, "40": {"question": "What is the foreign name of the card in French of type Creature, normal layout and black border color, by artist Matthew D. Wilson?", "GT_SQL": "SELECT name FROM foreign_data WHERE uuid IN ( SELECT uuid FROM cards WHERE types = 'Creature' AND layout = 'normal' AND borderColor = 'black' AND artist = 'Matthew D. Wilson' ) AND language = 'French'", "actual_evidence": ["in French refers to language = 'French'", " black border color refers to borderColor = 'black'"], "generic_evidence": ["'foreign name of the card in French' refers to foreign_data.language = 'French'", "'black border color' refers to cards.borderColor = 'black'"]}, "41": {"question": "What percentage of cards without power are in French?", "GT_SQL": "SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power LIKE '%*%'", "actual_evidence": ["in French refers to language = 'French'", " cards without power refers to power IS NULL OR power = '*'", " \npercentage = DIVIDE(COUNT(language = 'French' and power is NULL or power = '*'), COUNT( power is NULL or power = '*'))*100\n"], "generic_evidence": ["'cards without power are in French' refers to foreign_data.language = 'French'", "'cards without power' refers to cards.power IS NULL OR cards.power LIKE '%*%'", "'percentage of cards without power are in French' refers to CAST(SUM(CASE WHEN foreign_data.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(cards.id) WHERE cards.power IS NULL OR cards.power LIKE '%*%'"]}, "42": {"question": "What percentage of Japanese translated sets are expansion sets?", "GT_SQL": "SELECT CAST(SUM(CASE WHEN T2.language = 'Japanese' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) / COUNT(T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.type = 'expansion'", "actual_evidence": ["Japanese translated refers to language = 'Japanese'", " expansion sets refers to type = 'expansion'", " percentage = DIVIDE(COUNT(language = 'Japanese'),COUNT(language))*100"], "generic_evidence": ["'Japanese translated sets' refers to set_translations.language = 'Japanese'", "'Japanese translated sets are expansion sets' refers to sets.type = 'expansion'", "'percentage of Japanese translated sets' refers to CAST(SUM(CASE WHEN set_translations.language = 'Japanese' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(sets.id)"]}, "43": {"question": "What kind of printing is on the card that Daren Bader created?", "GT_SQL": "SELECT DISTINCT availability FROM cards WHERE artist = 'Daren Bader'", "actual_evidence": ["kind of printing refers to availability", " Daren Bader created refers to artist = 'Daren Bader'"], "generic_evidence": ["'kind of printing' refers to cards.availability", "'printing is on the card that Daren Bader created' refers to cards.artist = 'Daren Bader'"]}, "44": {"question": "How many cards are oversized, reprinted, and printed for promotions?", "GT_SQL": "SELECT COUNT(id) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1", "actual_evidence": ["are oversized refers to isOversized = 1", " reprinted refers to isReprint = 1", " printed for promotions refers to isPromo = 1"], "generic_evidence": ["'are oversized' refers to cards.isOversized = 1", "'reprinted' refers to cards.isReprint = 1", "'printed for promotions' refers to cards.isPromo = 1"]}, "45": {"question": "Please list any three unknown power cards that have promotional types for arena league.", "GT_SQL": "SELECT name FROM cards WHERE power IS NULL OR power LIKE '%*%' AND promoTypes = 'arenaleague' LIMIT 3", "actual_evidence": ["unknown power cards refers to power is null or power = '*'", " promotional types for arena league refers to promoTypes = 'arenaleague'"], "generic_evidence": ["'unknown power cards' refers to cards.power IS NULL OR cards.power = '*'", "'promotional types for arena league' refers to cards.promoTypes = 'arenaleague'"]}, "46": {"question": "What is the language of the card with the multiverse number 149934?", "GT_SQL": "SELECT language FROM foreign_data WHERE multiverseid = 149934", "actual_evidence": ["multiverse number 149934 refers to multiverseid = 149934"], "generic_evidence": ["'the card with the multiverse number (100)' refers to foreign_data.multiverseid = 100"]}, "47": {"question": "Please provide any three sets that don't appear in Magic: The Gathering Online, along with their names.", "GT_SQL": "SELECT name FROM sets WHERE mtgoCode IS NULL LIMIT 3", "actual_evidence": ["don't appear in Magic: The Gathering Online refers to mtgoCode is NULL or mtgoCode = ''"], "generic_evidence": ["'don't appear in Magic: The Gathering Online' refers to sets.mtgoCode IS NULL"]}, "48": {"question": "What is the language and expansion type of set number 206?", "GT_SQL": "SELECT T2.language, T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.id = 206", "actual_evidence": ["set number 206 refers to id = 206"], "generic_evidence": ["'set number (100)' refers to set_translations.id = 100"]}, "49": {"question": "Please list any two sets of cards with their IDs that have Italian-language cards and are located in the Shadowmoor block.", "GT_SQL": "SELECT T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Shadowmoor' AND T2.language = 'Italian' LIMIT 2", "actual_evidence": ["Italian-language refers to language = 'Italian'"], "generic_evidence": ["'Italian-language cards' refers to set_translations.language = 'Italian'"]}, "50": {"question": "Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.", "GT_SQL": "SELECT T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isFoilOnly = 1 AND T1.isForeignOnly = 0", "actual_evidence": ["available outside of the United States refers to isForeignOnly = 1", " has foil cards refers to isFoilOnly = 1", " with Japanese writing on them refers to language = 'Japanese'"], "generic_evidence": ["'available outside of the United States' refers to sets.isForeignOnly = 1", "'has foil cards' refers to sets.isFoilOnly = 1", "'with Japanese writing on them' refers to set_translations.language = 'Japanese'"]}, "51": {"question": "How many sets are available just in Japanese and not in Magic: The Gathering Online?", "GT_SQL": "SELECT COUNT(T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T2.setCode = T1.code WHERE T2.language = 'Japanese' AND T1.mtgoCode IS NULL", "actual_evidence": ["Japanese refers to language = 'Japanese'", " not in Magic: The Gathering Online refers to mtgoCode is null or mtgoCode = ''"], "generic_evidence": ["'just in Japanese' refers to set_translations.language = 'Japanese'", "'not in Magic: The Gathering Online' refers to sets.mtgoCode IS NULL"]}, "52": {"question": "How many cards have frame effect as extendedart? List out the id of those cards.", "GT_SQL": "SELECT id FROM cards WHERE frameEffects = 'extendedart' GROUP BY id", "actual_evidence": ["\nframe effect as extendedart refers to frameEffects = 'extendedart'\n"], "generic_evidence": ["'frame effect as extendedart' refers to cards.frameEffects = 'extendedart'"]}, "53": {"question": "Among black card borders, which card has full artwork?", "GT_SQL": "SELECT id FROM cards WHERE borderColor = 'black' AND isFullArt = 1", "actual_evidence": ["white card borders refers to borderColor = 'white'", " has full artwork refers to isFullArt = 1"], "generic_evidence": ["'Among black card borders' refers to cards.borderColor = 'black'", "'which card has full artwork' refers to cards.isFullArt = 1"]}, "54": {"question": "List out the set name of the set code \"ALL\".", "GT_SQL": "SELECT name FROM sets WHERE code = 'ALL'", "actual_evidence": ["set code refers to code"], "generic_evidence": ["'set code' refers to sets.code"]}, "55": {"question": "Give the code of sets have expansion type of 'expansion'?", "GT_SQL": "SELECT T2.setCode FROM sets AS T1 INNER JOIN set_translations AS T2 ON T2.setCode = T1.code WHERE T1.type = 'expansion' GROUP BY T2.setCode", "actual_evidence": ["code of sets refers to setCode"], "generic_evidence": ["'code of sets have expansion type of 'expansion'' refers to sets.code WHERE sets.type = 'expansion'"]}, "56": {"question": "Give the code of sets have expansion commander type?", "GT_SQL": "SELECT T2.setCode FROM sets AS T1 INNER JOIN set_translations AS T2 ON T2.setCode = T1.code WHERE T1.type = 'commander'", "actual_evidence": ["code of sets refers to setCode"], "generic_evidence": ["'code of sets have expansion commander type' refers to sets.code WHERE sets.type = 'commander'"]}, "57": {"question": "Of all the cards that are designed by Aaron Miller, how many of them are incredibly powerful?", "GT_SQL": "SELECT SUM(CASE WHEN artist = 'Aaron Miller' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) FROM cards", "actual_evidence": ["designed by Aaron Miller refers to artist = 'Aaron Miller'", " are icredibily powerful refers to cardKingdomFoilId = cardKingdomId AND cardKingdomId is not null"], "generic_evidence": ["'cards that are designed by Aaron Miller' refers to cards.artist = 'Aaron Miller'", "'are incredibly powerful' refers to cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL"]}, "58": {"question": "How many cards available in paper have a positive starting maximum hand size?", "GT_SQL": "SELECT SUM(CASE WHEN availability = 'paper' AND hAND LIKE '+%' AND hAND != '+0' THEN 1 ELSE 0 END) FROM cards", "actual_evidence": ["available in paper refers to availability like '%paper%'", " have a positive starting maximum hand size refers to hand = '+%'"], "generic_evidence": ["'cards available in paper' refers to cards.availability LIKE '%paper%'", "'have a positive starting maximum hand size' refers to cards.hAND LIKE '+%' AND cards.hAND != '+0'"]}, "59": {"question": "What's the unconverted mana cost of the card \"Ancestor's Chosen\"?", "GT_SQL": "SELECT DISTINCT manaCost FROM cards WHERE name = 'Ancestor''s Chosen'", "actual_evidence": ["card \"Ancestor's Chosen\" refers to name = 'Ancestor`s Chosen'"], "generic_evidence": ["'unconverted mana cost of the card \"Ancestor's Chosen\"' refers to cards.manaCost WHERE name = 'Ancestor`s Chosen'"]}, "60": {"question": "Among the cards with a white border color, how many of them have unknown power?", "GT_SQL": "SELECT SUM(CASE WHEN power LIKE '%*%' OR power IS NULL THEN 1 ELSE 0 END) FROM cards WHERE borderColor = 'white'", "actual_evidence": ["unknown power refers to power = '*' or power is null"], "generic_evidence": ["'have unknown power' refers to cards.power LIKE '%*%' OR cards.power IS NULL"]}, "61": {"question": "Which of the cards that are a promotional painting have multiple faces on the same card? Please list their names.", "GT_SQL": "SELECT DISTINCT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL", "actual_evidence": ["are a promotional painting refers to isPromo = 1", " have multiple faces on the same card refers to side is not Null"], "generic_evidence": ["'cards that are a promotional painting' refers to cards.isPromo = 1", "'cards that have multiple faces on the same card' refers to cards.side IS NOT NULL"]}, "62": {"question": "Please list the websites where I can purchase the cards that have the promotional type of \"bundle\".", "GT_SQL": "SELECT DISTINCT purchaseUrls FROM cards WHERE promoTypes = 'bundle'", "actual_evidence": ["promotional type of \"bundle\" refers to promoTypes = 'bundle'", " websites refers to purchaseUrls"], "generic_evidence": ["'cards that have the promotional type of \"bundle\"' refers to cards.promoTypes = 'bundle'", "'websites where I can purchase the cards that have the promotional type of \"bundle\"' refers to cards.purchaseUrls"]}, "63": {"question": "Which card costs more converted mana, \"Serra Angel\" or \"Shrine Keeper\"?", "GT_SQL": "SELECT name FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedManaCost DESC LIMIT 1", "actual_evidence": ["\"Serra Angel\" refers to name = 'Serra Angel'", " \"Shrine Keeper\" refers to name = 'Shrine Keeper'", " \ncard costs more converted mana when the value of convertedManaCost is greater"], "generic_evidence": ["\"Serra Angel\" refers to cards.name = 'Serra Angel'", "\"Shrine Keeper\" refers to cards.name = 'Shrine Keeper'", "'card costs more converted mana' refers to ORDER BY cards.convertedManaCost DESC LIMIT 1"]}, "64": {"question": "Which artist designed the card whose promotional name is \"Battra, Dark Destroyer\"?", "GT_SQL": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer'", "actual_evidence": ["promotional name is \"Battra, Dark Destroyer\" refers to flavorName = 'Battra, Dark Destroyer'"], "generic_evidence": ["'card whose promotional name is \"Battra, Dark Destroyer\"' refers to cards.flavorName = 'Battra, Dark Destroyer'"]}, "65": {"question": "What's the Italian name of the set of cards with \"Ancestor's Chosen\" is in?", "GT_SQL": "SELECT translation FROM set_translations WHERE setCode IN ( SELECT setCode FROM cards WHERE name = 'Ancestor''s Chosen' ) AND language = 'Italian'", "actual_evidence": ["Italian is a language which refers to language = 'Italian'", " with \"Ancestor's Chosen\" in the card set refers to name = 'Ancestor's Chosen'"], "generic_evidence": ["'the set of cards with \"Ancestor's Chosen\" is in' refers to set_translations.language = 'Italian'", "'the set of cards with \"Ancestor's Chosen\" is in' refers to cards.name = \"Ancestor's Chosen\""]}, "66": {"question": "For the set of cards with \"Ancestor's Chosen\" in it, is there a Korean version of it?", "GT_SQL": "SELECT IIF(SUM(CASE WHEN T2.language = 'Korean' AND T2.translation IS NOT NULL THEN 1 ELSE 0 END) > 0, 'YES', 'NO') FROM cards AS T1 INNER JOIN set_translations AS T2 ON T2.setCode = T1.setCode WHERE T1.name = 'Ancestor''s Chosen'", "actual_evidence": ["set of cards with \"Ancestor's Chosen\" in it refers to name = 'Ancestor's Chosen'", " Korean version refers to language = 'Korean'"], "generic_evidence": ["'the set of cards with \"Ancestor's Chosen\" in it' refers to cards.name = \"Ancestor's Chosen\"", "'Korean version' refers to set_translations.language = 'Korean'"]}, "67": {"question": "How many cards are there in the base set of \"Hauptset Zehnte Edition\"?", "GT_SQL": "SELECT T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T2.setCode = T1.code WHERE T2.translation = 'Hauptset Zehnte Edition'", "actual_evidence": ["\"Hauptset Zehnte Edition\" refers to translation = 'Hauptset Zehnte Edition'", " number of cards refers to baseSetSize"], "generic_evidence": ["\"Hauptset Zehnte Edition\"' refers to set_translations.translation = 'Hauptset Zehnte Edition'", "'number of cards in the base set of \"Hauptset Zehnte Edition\"' refers to sets.baseSetSize"]}, "68": {"question": "What is the Simplified Chinese translation of the name of the set \"Eighth Edition\"?", "GT_SQL": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T2.setCode = T1.code WHERE T1.name = 'Eighth Edition' AND T2.language = 'Chinese Simplified'", "actual_evidence": ["Eighth Edition is the name of card set which refers to name = 'Eighth Edition'", " Simplified Chinese is the language", " translation of the name refers to translation"], "generic_evidence": ["'the name of the set \"Eighth Edition\"' refers to sets.name = 'Eighth Edition'", "'language' refers to set_translations.language = 'Chinese Simplified'", "'the Simplified Chinese translation of the name' refers to set_translations.translation"]}, "69": {"question": "Did the set of cards with \"Angel of Mercy\" appear on Magic: The Gathering Online?", "GT_SQL": "SELECT IIF(T2.mtgoCode IS NOT NULL, 'YES', 'NO') FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T1.name = 'Angel of Mercy'", "actual_evidence": ["card set \"Angel of Mercy\" refers to name = 'Angel of Mercy'", " appear on Magic: The Gathering Online refers to mtgoCode is NOT NULL and vice versa"], "generic_evidence": ["'the set of cards with \"Angel of Mercy\" appear on Magic: The Gathering Online' refers to cards.name = 'Angel of Mercy'", "'appear on Magic: The Gathering Online' refers to sets.mtgoCode IS NOT NULL"]}, "70": {"question": "What is the expansion type of the set \"Hauptset Zehnte Edition\"?", "GT_SQL": "SELECT T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T2.setCode = T1.code WHERE T2.translation = 'Hauptset Zehnte Edition'", "actual_evidence": ["card set \"Hauptset Zehnte Edition\" refers to translation = ' Hauptset Zehnte Edition'", " expansion type refers to type"], "generic_evidence": ["'the set \"Hauptset Zehnte Edition\"' refers to set_translations.translation = 'Hauptset Zehnte Edition'", "'expansion type' refers to sets.type"]}, "71": {"question": "Among the sets in the block \"Ice Age\", how many of them have an Italian translation?", "GT_SQL": "SELECT COUNT(DISTINCT T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T2.setCode = T1.code WHERE T1.block = 'Ice Age' AND T2.language = 'Italian' AND T2.translation IS NOT NULL", "actual_evidence": ["sets in the block \"Ice Age\" refers to block = 'Ice Age'", " Italian translation refers to language = 'Italian'"], "generic_evidence": ["'Among the sets in the block \"Ice Age\"' refers to sets.block = 'Ice Age'", "'Italian translation' refers to set_translations.language = 'Italian'"]}, "72": {"question": "Among the sets of cards that have an Italian translation, how many of them have a base set number of under 10?", "GT_SQL": "SELECT COUNT(T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T2.setCode = T1.code WHERE T2.translation IS NOT NULL AND T1.baseSetSize < 10 AND T2.language = 'Italian'", "actual_evidence": ["Italian translation refers to language = 'Italian'", " have a translation means translation is not null", " base set number of under 10 refers to baseSetSize < 10"], "generic_evidence": ["'Among the sets of cards that have an Italian translation' refers to set_translations.language = 'Italian'", "'cards that have an translation' refers to set_translations.translation IS NOT NULL", "'base set number of under 10' refers to sets.baseSetSize < 10"]}, "73": {"question": "How many cards in the set Coldsnap have a black border color?", "GT_SQL": "SELECT SUM(CASE WHEN T1.borderColor = 'black' THEN 1 ELSE 0 END) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap'", "actual_evidence": ["card set Coldsnap refers to name = 'Coldsnap'", " black border color refers to borderColor = 'black'"], "generic_evidence": ["'cards in the set Coldsnap' refers to sets.name = 'Coldsnap'", "'cards in the set Coldsnap have a black border color' refers to cards.borderColor = 'black'"]}, "74": {"question": "What is card number 4 in the set Coldsnap?", "GT_SQL": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap' AND T1.number = 4", "actual_evidence": ["card set Coldsnap refers to name = 'Coldsnap'", " card number 4 refers to number = 4"], "generic_evidence": ["'the set Coldsnap' refers to sets.name = 'Coldsnap'", "'card number (100)' refers to cards.number = 100"]}, "75": {"question": "What's the German type of the card \"Ancestor's Chosen\"?", "GT_SQL": "SELECT DISTINCT T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T2.uuid = T1.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'German'", "actual_evidence": ["German refers to language = 'German'", " \"Ancestor's Chosen\" refers to name = 'Ancestor''s Chosen'"], "generic_evidence": ["'German type' refers to foreign_data.language = 'German'", "'German type of the card \"Ancestor's Chosen\"' refers to foreign_data.type where foreign_data.language = 'German' and cards.name = \"Ancestor's Chosen\""]}, "76": {"question": "What is the percentage of the cards with a converted mana cost of 7 in the set Coldsnap?", "GT_SQL": "SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap'", "actual_evidence": ["converted mana cost of 7 refers to convertedManaCost = 7", " card set Coldsnap refers to name = 'Coldsnap'", " percentage = DIVIDE(SUM(convertedManaCost = 7), SUM(convertedManaCost))*100"], "generic_evidence": ["'cards with a converted mana cost of (100)' refers to cards.convertedManaCost = 100", "'cards set Coldsnap' refers to sets.name = 'Coldsnap'", "'percentage of the cards with a converted mana cost of (100)' refers to CAST(SUM(CASE WHEN cards.convertedManaCost = 100 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(cards.id)"]}, "77": {"question": "List the keyrune code for the set whose code is 'PKHC'.", "GT_SQL": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'", "actual_evidence": ["keyrune code refers to keyruneCode"], "generic_evidence": ["'keyrune code' refers to sets.keyruneCode"]}, "78": {"question": "What's the magic card market name for the set which was released on 2017/6/9?", "GT_SQL": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09'", "actual_evidence": ["magic card market name refers to mcmName"], "generic_evidence": ["'magic card market name' refers to sets.mcmName"]}, "79": {"question": "What is the number of cards are there in the set of \"Rinascita di Alara\"?", "GT_SQL": "SELECT T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T2.setCode = T1.code WHERE T2.translation = 'Rinascita di Alara'", "actual_evidence": ["number of cards refers to baseSetSize", " set of \"Rinascita di Alara\" refers to translation = 'Rinascita di Alara'"], "generic_evidence": ["'the number of cards' refers to sets.baseSetSize", "'the set of \"Rinascita di Alara\"' refers to set_translations.translation = 'Rinascita di Alara'"]}, "80": {"question": "List the expansion type of the set \"Huiti\u00e8me \u00e9dition\".", "GT_SQL": "SELECT type FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE translation = 'Huiti\u00e8me \u00e9dition' )", "actual_evidence": ["the set \"Huiti\u00e8me \u00e9dition\" refers to translation = 'Huiti\u00e8me \u00e9dition'", " expansion type refers to type"], "generic_evidence": ["'the set \"Huiti\u00e8me \u00e9dition\"' refers to set_translations.translation = 'Huiti\u00e8me \u00e9dition'", "'expansion type' refers to sets.type"]}, "81": {"question": "How many translations of the name of the set \"Salvat 2011\"?", "GT_SQL": "SELECT COUNT(DISTINCT T2.translation) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T2.setCode = T1.code WHERE T1.name = 'Salvat 2011' AND T2.translation IS NOT NULL", "actual_evidence": ["translations of the name refers to translation", " translation is not NULL", " set \"Salvat 2011\" refers to name = 'Salvat 2011'"], "generic_evidence": ["'translations of the name' refers to COUNT(DISTINCT set_translations.translation)", "'many translations' refers to set_translations.translation IS NOT NULL", "'the name of the set \"Salvat 2011\"' refers to sets.name = 'Salvat 2011'"]}, "82": {"question": "What is the release date for the set \"Ola de fr\u00edo\"?", "GT_SQL": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN set_translations AS T2 ON T2.setCode = T1.code WHERE T2.translation = 'Ola de fr\u00edo'", "actual_evidence": ["release date is the date of card set being released", " set \"Ola de fr\u00edo\" refers to translation = 'Ola de fr\u00edo'"], "generic_evidence": ["'release date for the set' refers to sets.releaseDate ", "'the set \"Ola de fr\u00edo\"' refers to set_translations.translation = 'Ola de fr\u00edo'"]}, "83": {"question": "What was the expansion type for the set which card \"Samite Pilgrim\" in it?", "GT_SQL": "SELECT type FROM sets WHERE code IN ( SELECT setCode FROM cards WHERE name = 'Samite Pilgrim' )", "actual_evidence": ["expansion type refers to type", " card \"Samite Pilgrim\" refers to name = 'Samite Pilgrim'"], "generic_evidence": ["'the expansion type for the set in it' refers to sets.type", "'the set which card \"Samite Pilgrim\" in it' refers to cards.name = 'Samite Pilgrim'"]}, "84": {"question": "How many cards are there in the set 'World Championship Decks 2004' with the converted mana cost as '3'.", "GT_SQL": "SELECT COUNT(id) FROM cards WHERE setCode IN ( SELECT code FROM sets WHERE name = 'World Championship Decks 2004' ) AND convertedManaCost = 3", "actual_evidence": ["the set 'World Championship Decks 2004' refers to name = 'World Championship Decks 2004'"], "generic_evidence": ["'the set 'World Championship Decks 2004'' refers to sets.name = 'World Championship Decks 2004'"]}, "85": {"question": "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?", "GT_SQL": "SELECT translation FROM set_translations WHERE setCode IN ( SELECT code FROM sets WHERE name = 'Mirrodin' ) AND language = 'Chinese Simplified'", "actual_evidence": ["Simplified Chinese translation refers to language = 'Chinese Simplified'", " name of the set \"Mirrodin\" refers to name = 'Mirrodin'"], "generic_evidence": ["'Simplified Chinese translation' refers to set_translations.language = 'Chinese Simplified'", "'of the name of the set \"Mirrodin\"' refers to sets.name = 'Mirrodin'"]}, "86": {"question": "For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?", "GT_SQL": "SELECT CAST(SUM(CASE WHEN isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Japanese' )", "actual_evidence": ["Japanese translation refers to language = 'Japanese'", " in non-foil refers to isNonFoilOnly = 1", " percentage of Japanese non foil in Japanese cards refers to DIVIDE(SUM(isNonFoilOnly = 1), SUM(language = 'Japanese'))*100"], "generic_evidence": ["'has Japanese translation' refers to set_translations.language = 'Japanese'", "'available in non-foil' refers to sets.isNonFoilOnly = 1", "'percentage of them are only available in non-foil' refers to CAST(SUM(CASE WHEN sets.isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(sets.id)"]}, "87": {"question": "What is the unique id of the set that has the highest number of cards?", "GT_SQL": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1", "actual_evidence": ["the highest number of cards refers to MAX(baseSetSize)", " unique id refers to id"], "generic_evidence": ["'the highest number of cards' refers to ORDER BY sets.baseSetSize DESC LIMIT 1", "'unique id' refers to sets.id"]}, "88": {"question": "How many rare enchantment Abundance cards are there whose play format status are all legal?", "GT_SQL": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T2.uuid = T1.uuid WHERE T1.rarity = 'rare' AND T1.types = 'Enchantment' AND T1.name = 'Abundance' AND T2.status = 'Legal'", "actual_evidence": ["rare refers to rarity = 'rare'", " enchantment card refers to types = 'Enchantment'", " Abundance cards refers to name = 'Abundance'", " format status are all legal refers to status = 'Legal'"], "generic_evidence": ["'rare cards' refers to cards.rarity = 'rare'", "'enchantment cards' refers to cards.types = 'Enchantment'", "'Abundance cards' refers to cards.name = 'Abundance'", "'play format status are all legal' refers to legalities.status = 'Legal'"]}, "89": {"question": "Which of the play formats has the highest number of banned status? Indicate the play format and the name of the card.", "GT_SQL": "SELECT T2.format, T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T2.uuid = T1.uuid WHERE T2.status = 'Banned' GROUP BY T2.format ORDER BY COUNT(T2.status) DESC LIMIT 1", "actual_evidence": ["play format refers to format uuid", " banned status refers to status = 'banned'", " the highest number of banned status refers to MAX(status = 'banned')"], "generic_evidence": ["'play format' refers to legalities.format", "'banned status' refers to legalities.status = 'Banned'", "'play format has the highest number of banned status' refers to ORDER BY COUNT(legalities.status) DESC LIMIT 1"]}, "90": {"question": "Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?", "GT_SQL": "SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T2.uuid = T1.uuid WHERE T1.frameVersion = 1997 AND T1.hasContentWarning = 1 AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy'", "actual_evidence": ["version of frame style is 1997 refers to frameVersion = '1997'", " illustrated by D. Alexander Gregory refers to artist = 'D. Alexander Gregory'", " sensitive content refers to hasContentWarning = 1", " legacy play format refers to format = 'legacy'", " status of the card refers to status"], "generic_evidence": ["'cards whose version of frame style is (100)' refers to cards.frameVersion = '100'", "'card illustrated by D. Alexander Gregory' refers to cards.artist = 'D. Alexander Gregory'", "'illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast' refers to T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy' AND T1.hasContentWarning = 1", "'legacy play format' refers to legalities.format = 'legacy'", "'status of the card' refers to legalities.status"]}, "91": {"question": "Which cards are ranked 1st on EDHRec? List all of the cards name and its banned play format.", "GT_SQL": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T2.uuid = T1.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'Banned' GROUP BY T1.name, T2.format", "actual_evidence": ["ranked 1st on EDHRec refers to edhrecRank = 1", " banned refers to status = 'banned'", " play format refers to format", " cards name refers to name"], "generic_evidence": ["'cards ranked 1st on EDHRec' refers to cards.edhrecRank = 1", "'its banned play format' refers to legalities.status = 'Banned'", "'play format' refers to legalities.format", "'cards name' refers to cards.name"]}, "92": {"question": "Among the card designed by Matthew D. Wilson, how many are available only in the paper?", "GT_SQL": "SELECT COUNT(id) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'", "actual_evidence": ["card designed by Matthew D. Wilson refers to artist = 'Matthew D. Wilson'", " available only in the paper refers to availability = 'paper'"], "generic_evidence": ["'card designed by Matthew D. Wilson' refers to cards.artist = 'Matthew D. Wilson'", "'available only in the paper' refers to cards.availability = 'paper'"]}, "93": {"question": "Find and list the names of sets which doesn't have Japanese translation but have Korean translation.", "GT_SQL": "SELECT name FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Korean' AND language NOT LIKE '%Japanese%' )", "actual_evidence": ["names of sets refers to name", " doesn't have Japanese translation refers to language not like '%Japanese%'", " have Korean translation refers to language = 'Korean'"], "generic_evidence": ["'names of sets' refers to sets.name", "'have Korean translation' refers to set_translations.language = 'Korean'", "'doesn't have Japanese translation but have Korean translation' refers to set_translations.language = 'Korean' AND language NOT LIKE '%Japanese%'"]}, "94": {"question": "List all the frame styles and cards Allen Williams worked on and find any banned cards if there are any.", "GT_SQL": "SELECT DISTINCT T1.frameVersion, T1.name , IIF(T2.status = 'Banned', T1.name, 'NO') FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Allen Williams'", "actual_evidence": ["frame styles refers to frameVersion", " cards Allen Williams worked on refers to artist = 'Allen Williams'", " banned cards refers to status = 'banned'"], "generic_evidence": ["'all the frame styles' refers to cards.frameVersion", "'frame styles and cards Allen Williams worked on' refers to cards.artist = 'Allen Williams'", "'banned cards' refers to legalities.status = 'banned'"]}}